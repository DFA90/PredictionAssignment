training = read.csv("fitTrain.csv")
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv", "fitTest.csv")
trainNoTime <- training[,-c(1:7)] #remove inapprpriate columns
na80 <- apply(trainNoTime, 2, function(i){mean(is.na(i)) > 0.8}) %>% as.vector() #find + remove > 80% NA
trainNA <- trainNoTime[, !na80]
library(plyr)
library(dplyr)
library(ggplot2)
library(caret)
# set.seed(62433)
trainNoTime <- training[,-c(1:7)] #remove inapprpriate columns
na80 <- apply(trainNoTime, 2, function(i){mean(is.na(i)) > 0.8}) %>% as.vector() #find + remove > 80% NA
trainNA <- trainNoTime[, !na80]
(preProc <- preProcess(trainNoTime[,-ncol(trainNoTime)], method = c("center", "scale", "nzv", "pca"), thresh = 0.80))
trainPC <- predict(preProc, trainNoTime)
trainPC %>% dim
names(trainPC)[33:35]
preProc$pcaComp
preProc$numComp
trainPC <- predict(preProc, trainNoTime)[,34:(34+preProc$numComp)]
names(trainPC)
(modelfit1 <-train(classe ~., data = trainPC, method = "rf"))
(preProc <- preProcess(trainNoTime[,-ncol(trainNoTime)], method = c("center", "scale", "nzv", "pca"), thresh = 0.90))
```
Apply preprossing to training set
```{r trainTraining}
trainPC <- predict(preProc, trainNoTime)[,34:(34+preProc$numComp)]
(modelfit1 <-train(classe ~., data = trainPC, method = "rf"))
pred1 <- predict(modelfit1, newdata = trainPC)
confusionMatrix(pred1, trainPC$classe)
confusionMatrix(pred1, training$classe)
pred1 %>% length()
training$classe %>% length()
trainPC %>% dim
pred1 <- predict(modelfit1, newdata = training)
pred1 <- predict(modelfit1, newdata = predict(preProc, training))
confusionMatrix(pred1, training$classe)
pred1 %>% length
length(predict(preProc, training))
length(predict(preProc, trainPC))
pred1 <- predict(modelfit1, newdata = predict(preProc, training))
confusionMatrix(pred1, training$classe)
pred1 <- predict(modelfit1, predict(preProc, training))
pred1 %>% length
dim(predict(preProc, training))
pred1 <- predict(modelfit1, trainPC)
pred1 %>% length
(preProc <- preProcess(trainNA[,-ncol(trainNA)], method = c("center", "scale", "nzv", "pca"), thresh = 0.90))
trainPC <- predict(preProc, trainNoTime)[,34:(34+preProc$numComp)]
names(trainPC)
trainPC <- predict(preProc, trainNA)[,34:(34+preProc$numComp)]
names(trainPC)
(modelfit1 <-train(classe ~., data = trainPC, method = "rf"))
pred1 <- predict(modelfit1, predict(preProc, training))
confusionMatrix(pred1, training$classe)
(modelfit2 <- train(classe ~., data = trainPC, method = "gbm", verbose = F))
pred2 <- predict(modelfit2, trainPC)
confusionMatrix(pred2, trainPC$classe)
(modelfit3 <- train(classe ~., data = trainPC, method = "lda"))
pred3 <- predict(modelfit3, trainPC)
confusionMatrix(pred3, trainPC$classe)
pred1 <- predict(modelfit1, predict(preProc, training))
confusionMatrix(pred1, training$classe)
predict(modelfit1, predict(preProc, testing))
testing = read.csv("fitTest.csv")
predict(modelfit1, predict(preProc, testing))
training$classe
getwd()
library(gbm)
library(MASS)
?gbm
?randomForest
library(randomForest)
?randomForest
?lda
